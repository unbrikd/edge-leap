name: build

on:
  workflow_call:

env:
  GO_VERSION: "1.22"
  DESTDIR: "./bin"

jobs:
  # binaries:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout the code
  #     uses: actions/checkout@v2
    
  #   - name: Linux
  #     run: |
  #       make build GOOS="linux" GOARCH="amd64" DESTDIR=${{ env.DESTDIR }}
  #       make build GOOS="linux" GOARCH="arm64" DESTDIR=${{ env.DESTDIR }}
      
  #   - name: MacOS
  #     run: |
  #       make build GOOS="darwin" GOARCH="amd64" DESTDIR=${{ env.DESTDIR }}
  #       make build GOOS="darwin" GOARCH="arm64" DESTDIR=${{ env.DESTDIR }}
    
  #   - name: Windows
  #     run: |
  #       make build GOOS="windows" GOARCH="amd64" EXTENSION=".exe" DESTDIR=${{ env.DESTDIR }}
    
  #   - name: Upload
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: assets
  #       path: "${{ env.DESTDIR }}"
  #       if-no-files-found: error
  
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set release version
        run: |
          version=$(make print-version)
          echo "APPLICATION_VERSION=${version}" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push multi-architecture Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --tag ghcr.io/unbrikd/elcli:latest \
            -f ./docker/Dockerfile .

      - name: Create and push Docker manifest
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/unbrikd/elcli:manifest-latest \
            ghcr.io/unbrikd/elcli:latest